{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/role.model.ts","webpack:///src/app/auth/token-storage.service.ts","webpack:///src/app/manage/manage.component.ts","webpack:///src/app/manage/manage.component.html","webpack:///src/app/manage/monitor/monitor.component.ts","webpack:///src/app/manage/monitor/monitor.component.html","webpack:///src/app/manage/monitor/monitor.service.ts","webpack:///src/app/primeng.modules.ts","webpack:///src/app/showcase/showcase.component.ts","webpack:///src/app/showcase/showcase.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","canActivate","data","roles","ROLE_ADMIN","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","translate","addLangs","setDefaultLang","declarations","providers","bootstrap","HttpLoaderFactory","http","AuthComponent","authService","tokenStorage","router","route","messageService","form","isLoggedIn","isLoginFailed","errorMessage","getToken","getUser","queryParams","subscribe","params","credentials","username","value","password","login","saveToken","token","saveUser","updateUser","add","severity","summary","detail","navigateByUrl","navigate","err","console","log","error","message","reset","onSubmit","AuthGuard","state","user","some","r","includes","url","providedIn","TOKEN_HEADER_KEY","AuthInterceptor","next","authReq","clone","headers","set","handle","authInterceptorProviders","provide","useClass","multi","AUTH_API","apiUrl","httpOptions","AuthService","userChanges","post","email","signOut","role","getRoles","Role","TOKEN_KEY","USER_KEY","TokenStorageService","window","sessionStorage","clear","removeItem","setItem","getItem","JSON","stringify","parse","ManageComponent","MonitorComponent","monitorService","monitor","getAllMonitors","monitors","cols","field","header","newMonitor","displayDialog","saveMonitor","push","indexOf","selectedMonitor","index","filter","val","i","event","cloneCar","c","car","prop","monitorScreen","onRowSelect","save","MonitorService","ressorceUrl","get","toPromise","res","_embedded","ipAddress","PrimeNgModule","ShowcaseComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ManageComponent } from './manage/manage.component';\r\nimport { ShowcaseComponent } from './showcase/showcase.component';\r\nimport { MonitorComponent } from './manage/monitor/monitor.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { Role } from './auth/role.model';\r\n\r\nconst routes: Routes = [\r\n    { path: 'manage', component: ManageComponent, children: [\r\n        { path: 'auth/signin', component: AuthComponent },\r\n        { path: 'monitors', component: MonitorComponent, canActivate: [AuthGuard], data: { roles: [Role.ROLE_ADMIN] } },\r\n    ]},\r\n\r\n    { path: 'showcase', component: ShowcaseComponent },\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'substitutions-frontend';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {TranslateModule, TranslateService} from '@ngx-translate/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShowcaseComponent } from './showcase/showcase.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { MonitorComponent } from './manage/monitor/monitor.component';\nimport { PrimeNgModule } from './primeng.modules';\nimport { AuthComponent } from './auth/auth.component';\nimport { authInterceptorProviders } from './auth/auth.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    ShowcaseComponent,\n    ManageComponent,\n    MonitorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule,\n    PrimeNgModule,\n    HttpClientModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    authInterceptorProviders,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(\n    public translate: TranslateService\n  ) {\n    translate.addLangs(['en', 'de']);\n    translate.setDefaultLang('de');\n  }\n}\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, '/assets/translations/', '.json');\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  form: any = {};\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n  return = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n    this.route.queryParams\r\n      .subscribe(params => this.return = params['return']);\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const credentials = { username: form.value.username, password: form.value.password };\r\n    this.authService.login(credentials).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.token);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.authService.updateUser();\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.messageService.add({ severity: 'success', summary: 'Successful Login', detail: 'Logged in as ' + this.roles + '.' });\r\n        \r\n        if (this.return && this.return !== '') {\r\n          this.router.navigateByUrl(this.return);\r\n        } else {\r\n          this.router.navigate(['manage','monitors']);\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        \r\n        this.messageService.add({ severity: 'error', summary: 'Error Message', detail: err.error?.message });\r\n        this.errorMessage = err.error?.message;\r\n        form.reset({ username: form.value.username, password: ''}) ;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container h-100\">\r\n    <div class=\"d-flex justify-content-center h-100\">\r\n        <div class=\"user_card\" style=\"margin-top: 100px;\"\r\n        [style.height]=\"form.invalid && form.submitted  ? '500px' : '400px' \">\r\n            <div class=\"d-flex justify-content-center\">\r\n                <div class=\"brand_logo_container\">\r\n                    <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"brand_logo\" alt=\"Logo\">\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-center\">\r\n                <form (ngSubmit)=\"onSubmit(form)\" #form=\"ngForm\">\r\n                    <h2 class=\"d-flex justify-content-center\" style=\"margin-top: 100px; margin-bottom: 25px;\">{{'login' | translate }}</h2>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\"><i class=\"pi pi-id-card\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control\" name=\"username\" [attr.placeholder]=\"'username' | translate\" ngModel\r\n                                required #username=\"ngModel\" />\r\n                        </div>\r\n\r\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"form.submitted && username.invalid\">\r\n                            Username is required!\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\"><i class=\"pi pi-key\"></i></span>\r\n                            </div>\r\n                            <input type=\"password\" class=\"form-control\" name=\"password\" ngModel required minlength=\"6\"\r\n                                #password=\"ngModel\" [attr.placeholder]=\"'password' | translate\"/>\r\n                        </div>\r\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"form.submitted && password.invalid\">\r\n                            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                            <div *ngIf=\"password.errors.minlength\">\r\n                                Password must be at least 6 characters\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-primary btn-block\" type=\"submit\">\r\n                            {{'login' | translate }}\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <!-- <div class=\"form-group\">\r\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"form.submitted && isLoginFailed\">\r\n                    Login failed: {{ errorMessage }}\r\n                </div>\r\n            </div>\r\n            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n                Logged in as {{ roles }}.\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    const user = this.authService.getUser();\r\n\r\n    if (user) {\r\n      if(route.data.roles && user.roles.some(r=> route.data.roles.includes(r))){\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/test']);\r\n        return false;\r\n      }\r\n     \r\n    } else {\r\n      this.router.navigate(['manage/auth/signin'], {\r\n        queryParams: {\r\n          return: state.url\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\n\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      // for Spring Boot back-end\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from './user.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\nconst AUTH_API = environment.apiUrl + 'auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n  userChanges = new Subject<User>();\r\n\r\n  constructor(private http: HttpClient, private router: Router, private tokenStorage: TokenStorageService) { }\r\n\r\n  login(credentials): Observable<any> {\r\n    console.log(AUTH_API+ 'signin');\r\n    \r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username: credentials.username,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  isAthenticated() {\r\n    return !!this.tokenStorage.getToken();\r\n  }\r\n\r\n  logout() {\r\n    this.tokenStorage.signOut();\r\n  }\r\n\r\n  getUser() {\r\n    return this.tokenStorage.getUser();\r\n  }\r\n\r\n  getRoles(): string[] {\r\n    return this.tokenStorage.getUser().roles;\r\n  }\r\n\r\n  updateUser() {\r\n    this.userChanges.next(this.getUser());\r\n  }\r\n\r\n  hasRole(role: string): boolean {\r\n    return this.getRoles().includes(role);\r\n  }\r\n}\r\n","export enum Role {\r\n    ROLE_TEACHER = 'ROLE_TEACHER',\r\n    ROLE_STUDENT = 'ROLE_STUDENT',\r\n    ROLE_ADMIN = 'ROLE_ADMIN'\r\n  }","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser() {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})\nexport class ManageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Monitor } from './monitor.model'\nimport { MonitorService } from './monitor.service'\nimport { MenuItem } from 'primeng/api/menuitem';\n\n@Component({\n  selector: 'app-monitor',\n  templateUrl: './monitor.component.html',\n  styleUrls: ['./monitor.component.css']\n})\nexport class MonitorComponent implements OnInit {\n\n  displayDialog: boolean;\n\n    monitor: Monitor = {};\n\n    selectedMonitor: Monitor;\n\n    newMonitor: boolean;\n\n    monitors: Monitor[];\n\n    cols: any[];\n\n    items: MenuItem[];\n\n    constructor(private monitorService: MonitorService) { }\n\n    ngOnInit() {\n        this.monitorService.getAllMonitors().then(monitors => {\n            this.monitors = monitors;\n            console.log(this.monitors);\n        });\n\n        this.cols = [\n            { field: 'ipAddress', header: 'IP Address' },\n            { field: 'name', header: 'Name' },\n            { field: 'showGroup', header: 'Show Group' },\n            { field: 'location', header: 'Location' },\n            { field: 'status', header: 'Status' }\n        ];\n\n\n    }\n\n    showDialogToAdd() {\n        this.newMonitor = true;\n        this.monitor = {};\n        this.displayDialog = true;\n    }\n\n    save() {\n        let monitors = [...this.monitors];\n        if (this.newMonitor){\n            this.monitorService.saveMonitor(this.monitor)\n            monitors.push(this.monitor);\n        } else\n            monitors[this.monitors.indexOf(this.selectedMonitor)] = this.monitor;\n\n        this.monitors = monitors;\n        this.monitor = null;\n        this.displayDialog = false;\n    }\n\n    delete() {\n        let index = this.monitors.indexOf(this.selectedMonitor);\n        this.monitors = this.monitors.filter((val, i) => i != index);\n        this.monitor = null;\n        this.displayDialog = false;\n    }\n\n    onRowSelect(event) {\n        this.newMonitor = false;\n        this.monitor = this.cloneCar(event.data);\n        this.displayDialog = true;\n    }\n\n    cloneCar(c: Monitor): Monitor {\n        let car = {};\n        for (let prop in c) {\n            car[prop] = c[prop];\n        }\n        return car;\n    }\n\n    monitorOff(){\n        this.monitorService.monitorScreen(this.monitor, false);\n    }\n\n    monitorOn(){\n        this.monitorService.monitorScreen(this.monitor, true);\n    }\n}\n","<div style=\"text-align: center;\">\n    <h1>Monitores</h1>\n    <p-table [columns]=\"cols\" [value]=\"monitors\" selectionMode=\"single\" [(selection)]=\"selectedMonitor\"\n        (onRowSelect)=\"onRowSelect($event)\" [paginator]=\"true\" [rows]=\"15\">\n        <ng-template pTemplate=\"caption\">\n            List of Monitors\n        </ng-template>\n        <ng-template pTemplate=\"header\" let-columns>\n            <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n            <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                    <ng-template *ngIf=\"col.field === 'status'\">    \n                        <p-toggleButton [(ngModel)]=\"rowData[col.field]\" onLabel=\"An\" offLabel=\"Aus\"></p-toggleButton>\n                    </ng-template>\n                        {{rowData[col.field]}}\n                </td>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"summary\" let-rowData>\n            <div style=\"text-align:left\">\n                <button type=\"button\" pButton icon=\"pi pi-plus\" (click)=\"showDialogToAdd()\" label=\"Add\"></button>\n            </div>\n        </ng-template>\n    </p-table>\n    <p-dialog header=\"Monitor Details\" [(visible)]=\"displayDialog\" [focusOnShow]=\"false\" [responsive]=\"true\"\n        showEffect=\"fade\" [modal]=\"true\" [style]=\"{width: '300px'}\">\n        <div class=\"ui-g ui-fluid\" *ngIf=\"monitor\">\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"ipAddress\">IP Adresse</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <input pInputText id=\"ipAddress\" [(ngModel)]=\"monitor.ipAddress\" autofocus />\n                </div>\n            </div>\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"name\">Name</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <input pInputText id=\"name\" [(ngModel)]=\"monitor.name\" />\n                </div>\n            </div>\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"location\">Location</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <input pInputText id=\"location\" [(ngModel)]=\"monitor.location\" />\n                </div>\n            </div>\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"status\">Status</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <button type=\"button\" pButton (click)=\"monitorOn()\" label=\"On\"></button>\n                    <button type=\"button\" pButton (click)=\"monitorOff()\" label=\"Off\"></button>\n                </div>\n            </div>\n        </div>\n        <p-footer>\n            <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n                <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"delete()\" label=\"Delete\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"save()\" label=\"Save\"></button>\n            </div>\n        </p-footer>\n    </p-dialog>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Monitor } from './monitor.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MonitorService {\r\n\r\n    ressorceUrl = environment.apiUrl + 'monitors';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllMonitors() {\r\n        return this.http.get<any>(this.ressorceUrl).toPromise()\r\n        .then(res => \r\n            <Monitor[]>res._embedded.monitors\r\n        )\r\n        .then(data => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n\r\n    saveMonitor(monitor:Monitor){\r\n        return this.http.post<any>(this.ressorceUrl, monitor).toPromise()\r\n        .then(res => \r\n            <Monitor>res\r\n        )\r\n        .then(data => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    monitorScreen(monitor:Monitor, state: boolean){\r\n        return this.http.post('http://' + monitor.ipAddress + '/screen/changeStatus?status=' + state, '').toPromise();\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\n\r\n@NgModule({\r\n    imports: [\r\n        TableModule,\r\n        DialogModule,\r\n        ToastModule,\r\n        ButtonModule,\r\n        ToggleButtonModule,\r\n    ],\r\n    exports: [\r\n        TableModule,\r\n        DialogModule,\r\n        ToastModule,\r\n        ButtonModule,\r\n        ToggleButtonModule,\r\n    ],\r\n    providers: [MessageService]\r\n})\r\nexport class PrimeNgModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase',\n  templateUrl: './showcase.component.html',\n  styleUrls: ['./showcase.component.css']\n})\nexport class ShowcaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>showcase works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'http://localhost:8080/api/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}