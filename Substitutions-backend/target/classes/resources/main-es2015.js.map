{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth.service.ts","./src/app/auth/role.model.ts","./src/app/auth/token-storage.service.ts","./src/app/manage/manage-showcase/manage-showcase.component.ts","./src/app/manage/manage-showcase/manage-showcase.component.html","./src/app/manage/manage.component.ts","./src/app/manage/manage.component.html","./src/app/manage/monitor/monitor.component.ts","./src/app/manage/monitor/monitor.component.html","./src/app/manage/monitor/monitor.service.ts","./src/app/primeng.modules.ts","./src/app/showcase/showcase.component.ts","./src/app/showcase/showcase.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACK;AACM;AACI;AAChB;AACR;AACL;AACoD;;;AAE7F,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE,QAAQ,EAAE;YACpD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kEAAa,EAAE;YACjD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kFAAgB,EAAG,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,qDAAI,CAAC,UAAU,CAAC,EAAE,EAAE;YAChH,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yGAAuB,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,qDAAI,CAAC,UAAU,CAAC,EAAE,EAAE;SACzH,EAAC;IAEF,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;CACrD,CAAC;AAOK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHhB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEb,gBAAgB,uFAFf,4DAAY;6FAEb,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,wBAAwB,CAAC;KAClC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACY;AACiB;AACF;AACvB;AACoB;AACY;AAErB;AACT;AACmB;AACN;AACU;AACpB;AACI;AACa;AAC0B;;;AA0BtF,MAAM,SAAS;IACpB,YACS,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAElC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACjC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;;wFANU,SAAS,cAFR,2DAAY;4IAEb,SAAS,+IALT;QACT,gFAAwB;KACzB,YAZQ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,oEAAS;YACT,+DAAa;YACb,qEAAgB;YAChB,mEAAe,CAAC,OAAO,EAAE;YACzB,4FAAuB;SACxB;mIAMU,SAAS,mBAtBlB,2DAAY;QACZ,mEAAa;QACb,+EAAiB;QACjB,yEAAe;QACf,mFAAgB;QAChB,0GAAuB,aAGvB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,oEAAS;QACT,+DAAa;QACb,qEAAgB,uEAEhB,4FAAuB;6FAOd,SAAS;cAxBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,mEAAa;oBACb,+EAAiB;oBACjB,yEAAe;oBACf,mFAAgB;oBAChB,0GAAuB;iBACxB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,oEAAS;oBACT,+DAAa;oBACb,qEAAgB;oBAChB,mEAAe,CAAC,OAAO,EAAE;oBACzB,4FAAuB;iBACxB;gBACD,SAAS,EAAE;oBACT,gFAAwB;iBACzB;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;AAUM,SAAS,iBAAiB,CAAC,IAAgB;IAChD,OAAO,IAAI,8EAAmB,CAAC,IAAI,EAAE,uBAAuB,EAAE,OAAO,CAAC,CAAC;AACzE,CAAC;;;;;;;;;;;;;ACtDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;ICqB1B,0EACI;IAAA,kFACJ;IAAA,4DAAM;;;IAWF,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACI;IAAA,mGACJ;IAAA,4DAAM;;;IAJV,0EACI;IAAA,iHAAsC;IACtC,iHACI;IAER,4DAAM;;;;IAJG,0DAAgC;IAAhC,sFAAgC;IAChC,0DAAiC;IAAjC,uFAAiC;;ADpB3D,MAAM,aAAa;IAQxB,YACU,WAAwB,EACxB,YAAiC,EACjC,MAAc,EACd,KAAqB,EACrB,cAA8B;QAJ9B,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAZxC,SAAI,GAAQ,EAAE,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAa,EAAE,CAAC;QACrB,WAAM,GAAG,EAAE,CAAC;IAOgC,CAAC;IAE7C,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAChD;QACD,IAAI,CAAC,KAAK,CAAC,WAAW;aACnB,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,MAAM,WAAW,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACrF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAC3C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEjC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAE9B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,eAAe,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC;YAE1H,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACxC;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAC,UAAU,CAAC,CAAC,CAAC;aAC7C;QACH,CAAC,EACD,GAAG,CAAC,EAAE;;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,QAAE,GAAG,CAAC,KAAK,0CAAE,OAAO,EAAE,CAAC,CAAC;YACrG,IAAI,CAAC,YAAY,SAAG,GAAG,CAAC,KAAK,0CAAE,OAAO,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC,CAAE;YAC5D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;;0EArDU,aAAa;6FAAb,aAAa;;QCf1B,yEACI;QAAA,yEACI;QAAA,yEAEI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,6EACI;QADE,uRAAY,kBAAc,IAAC;QAC7B,wEAA0F;QAAA,wDAAwB;;QAAA,4DAAK;QACvH,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EAA+B;QAAA,oEAA6B;QAAA,4DAAO;QACvE,4DAAM;QACN,4EAEJ;;QAAA,4DAAM;QAEN,4GACI;QAER,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EAA+B;QAAA,oEAAyB;QAAA,4DAAO;QACnE,4DAAM;QACN,4EAEJ;;QAAA,4DAAM;QACN,4GACI;QAKR,4DAAM;QACN,0EACI;QAAA,8EACI;QAAA,wDACJ;;QAAA,4DAAS;QACb,4DAAM;QAEV,4DAAO;QACX,4DAAM;QASV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;QAvDE,0DAAqE;QAArE,uHAAqE;QAQiC,0DAAwB;QAAxB,0IAAwB;QAMlD,0DAA2C;QAA3C,uJAA2C;QAI1D,0DAA0C;QAA1C,gGAA0C;QAU3D,0DAA2C;QAA3C,uJAA2C;QAE1B,0DAA0C;QAA1C,gGAA0C;QASnF,0DACJ;QADI,sJACJ;;6FD5BX,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAGpC,MAAM,SAAS;IAGpB,YACS,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACnB,CAAC;IAEL,WAAW,CAAC,KAA6B,EAC7B,KAA0B;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAExC,IAAI,IAAI,EAAE;YACR,IAAG,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC;gBACvE,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChC,OAAO,KAAK,CAAC;aACd;SAEF;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,EAAE;gBAC3C,WAAW,EAAE;oBACX,MAAM,EAAE,KAAK,CAAC,GAAG;iBAClB;aACF,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;IAEH,CAAC;;kEA7BU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBADI,MAAM;6FACnB,SAAS;cADrB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACLlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACd;;;AAM3C,MAAM,gBAAgB,GAAG,eAAe,CAAC,CAAO,2BAA2B;AAGpE,MAAM,eAAe;IAC1B,YAAoB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;IAAI,CAAC;IAEnD,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,IAAI,OAAO,GAAG,GAAG,CAAC;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,2BAA2B;YAC3B,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;SACxF;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;8EAXU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;AAeJ,MAAM,wBAAwB,GAAG;IACtC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE;CACvE,CAAC;;;;;;;;;;;;;AC1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AAEpB;AAEgB;;;;;AAG3D,MAAM,QAAQ,GAAG,wEAAW,CAAC,MAAM,GAAG,OAAO,CAAC;AAE9C,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAGK,MAAM,WAAW;IAItB,YAAoB,IAAgB,EAAU,MAAc,EAAU,YAAiC;QAAnF,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAFvG,gBAAW,GAAG,IAAI,4CAAO,EAAQ,CAAC;IAEyE,CAAC;IAE5G,KAAK,CAAC,WAAW;QACf,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAE,QAAQ,CAAC,CAAC;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ;SAC/B,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,cAAc;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IACxC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;;sEA7CU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBADE,MAAM;6FACnB,WAAW;cADvB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACdlC;AAAA;AAAA,IAAY,IAIT;AAJH,WAAY,IAAI;IACZ,qCAA6B;IAC7B,qCAA6B;IAC7B,iCAAyB;AAC3B,CAAC,EAJS,IAAI,KAAJ,IAAI,QAIb;;;;;;;;;;;;;ACJH;AAAA;AAAA;AAA2C;;AAE3C,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,mBAAmB;IAE9B;IAAgB,CAAC;IAEjB,OAAO;QACL,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAEM,SAAS,CAAC,KAAa;QAC5B,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAEM,QAAQ;QACb,OAAO,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAEM,QAAQ,CAAC,IAAI;QAClB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,CAAC;;sFAxBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,uBAAuB;IAElC;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCPpC,oEAAG;QAAA,iFAAsB;QAAA,4DAAI;;6FDOhB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,eAAe;IAE1B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,2EAA+B;;6FDOlB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;ICKtC,6EACJ;;;IAGQ,yEACI;IAAA,uDACA;IAAA,4EAA6C;IACjD,4DAAK;;;IAH2B,yFAA6B;IACzD,0DACA;IADA,yFACA;IAAY,0DAAmB;IAAnB,+EAAmB;;;IAHvC,qEACI;IAAA,yHACI;IAGR,4DAAK;;;IAJG,0DAA2B;IAA3B,+EAA2B;;;;IAUvB,qFAA8F;IAA9E,0eAAgC;IAA6B,4DAAiB;;;;IAA9E,8FAAgC;;;IADpD,8IACI;;;IAFR,qEACI;IAAA,gIACI;IAEA,uDACR;IAAA,4DAAK;;;;IAJY,0DAA8B;IAA9B,4FAA8B;IAGvC,0DACR;IADQ,qGACR;;;IANJ,yEACI;IAAA,yHACI;IAKR,4DAAK;;;;IAPD,sFAA0B;IACtB,0DAA2B;IAA3B,+EAA2B;;;;IASnC,0EACI;IAAA,6EAAiG;IAAjD,qUAA2B;IAAa,4DAAS;IACrG,4DAAM;;;;IAKV,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,4EAAuB;IAAA,qEAAU;IAAA,4DAAQ;IAC7C,4DAAM;IACN,0EACI;IAAA,4EACJ;IADqC,2VAA+B;IAAhE,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,4EAAkB;IAAA,gEAAI;IAAA,4DAAQ;IAClC,4DAAM;IACN,2EACI;IAAA,6EACJ;IADgC,uVAA0B;IAAtD,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EAAsB;IAAA,oEAAQ;IAAA,4DAAQ;IAC1C,4DAAM;IACN,2EACI;IAAA,6EACJ;IADoC,2VAA8B;IAA9D,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EAAoB;IAAA,kEAAM;IAAA,4DAAQ;IACtC,4DAAM;IACN,2EACI;IAAA,8EAAwE;IAA1C,wTAAqB;IAAY,4DAAS;IACxE,8EAA0E;IAA5C,yTAAsB;IAAa,4DAAS;IAC9E,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA5BuC,0DAA+B;IAA/B,6FAA+B;IAQpC,0DAA0B;IAA1B,wFAA0B;IAQtB,0DAA8B;IAA9B,4FAA8B;;;AD7C3E,MAAM,gBAAgB;IAgBzB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAZlD,YAAO,GAAY,EAAE,CAAC;IAYgC,CAAC;IAEvD,QAAQ;QACJ,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG;YACR,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,YAAY,EAAE;YAC5C,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;YACjC,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,YAAY,EAAE;YAC5C,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE;YACzC,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE;SACxC,CAAC;IAGN,CAAC;IAED,eAAe;QACX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,IAAI;QACA,IAAI,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,UAAU,EAAC;YAChB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;YAC7C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B;;YACG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAEzE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,MAAM;QACF,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,KAAK;QACb,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,QAAQ,CAAC,CAAU;QACf,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAK,IAAI,IAAI,IAAI,CAAC,EAAE;YAChB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;SACvB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED,UAAU;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,SAAS;QACL,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;;gFAjFQ,gBAAgB;gGAAhB,gBAAgB;QCV7B,yEACI;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,6EAEI;QAFgE,mMAA+B,mGAChF,uBAAmB,IAD6D;QAE/F,4HACI;QAEJ,4HACI;QAOJ,4HACI;QASJ,4HACI;QAIR,4DAAU;QACV,8EAEI;QAF+B,8LAA2B;QAE1D,6GACI;QAkCJ,4EACI;QAAA,0EACI;QAAA,6EAA4F;QAA3C,yIAAS,YAAQ,IAAC;QAAgB,4DAAS;QAC5F,8EAAwF;QAAvC,yIAAS,UAAM,IAAC;QAAc,4DAAS;QAC5F,4DAAM;QACV,4DAAW;QACf,4DAAW;QACf,4DAAM;;QAzEO,0DAAgB;QAAhB,6EAAgB;QA8BY,0DAA0B;QAA1B,gIAA0B;QAD5B,sFAA2B;QAE/B,0DAAe;QAAf,6EAAe;;6FDvBrC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGgB;;;AAGpD,MAAM,cAAc;IAIvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,gBAAW,GAAG,wEAAW,CAAC,MAAM,GAAG,UAAU,CAAC;IAEN,CAAC;IAEzC,cAAc;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;aACtD,IAAI,CAAC,GAAG,CAAC,EAAE,CACG,GAAG,CAAC,SAAS,CAAC,QAAQ,CACpC;aACA,IAAI,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,WAAW,CAAC,OAAe;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE;aAChE,IAAI,CAAC,GAAG,CAAC,EAAE,CACC,GAAG,CACf;aACA,IAAI,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,OAAe,EAAE,KAAc;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,8BAA8B,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAClH,CAAC;;4EA7BQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBADD,MAAM;6FACnB,cAAc;cAD1B,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACLlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEK;AACF;AACA;AACC;AACC;AACY;;AAmBnD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBAFX,CAAC,0DAAc,CAAC,YAdlB;YACL,yDAAW;YACX,2DAAY;YACZ,yDAAW;YACX,2DAAY;YACZ,uEAAkB;SACrB;QAEG,yDAAW;QACX,2DAAY;QACZ,yDAAW;QACX,2DAAY;QACZ,uEAAkB;mIAIb,aAAa,cAflB,yDAAW;QACX,2DAAY;QACZ,yDAAW;QACX,2DAAY;QACZ,uEAAkB,aAGlB,yDAAW;QACX,2DAAY;QACZ,yDAAW;QACX,2DAAY;QACZ,uEAAkB;6FAIb,aAAa;cAjBzB,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,yDAAW;oBACX,2DAAY;oBACZ,yDAAW;oBACX,2DAAY;oBACZ,uEAAkB;iBACrB;gBACD,OAAO,EAAE;oBACL,yDAAW;oBACX,2DAAY;oBACZ,yDAAW;oBACX,2DAAY;oBACZ,uEAAkB;iBACrB;gBACD,SAAS,EAAE,CAAC,0DAAc,CAAC;aAC9B;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;6FDOT,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAC,4BAA4B;CACpC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ManageComponent } from './manage/manage.component';\r\nimport { ShowcaseComponent } from './showcase/showcase.component';\r\nimport { MonitorComponent } from './manage/monitor/monitor.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { Role } from './auth/role.model';\r\nimport { ManageShowcaseComponent } from './manage/manage-showcase/manage-showcase.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'manage', component: ManageComponent, children: [\r\n        { path: 'auth/signin', component: AuthComponent },\r\n        { path: 'monitors', component: MonitorComponent , canActivate: [AuthGuard], data: { roles: [Role.ROLE_ADMIN] } },\r\n        { path: 'showcase', component: ManageShowcaseComponent, canActivate: [AuthGuard], data: { roles: [Role.ROLE_ADMIN] } },\r\n    ]},\r\n\r\n    { path: 'showcase', component: ShowcaseComponent },\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'substitutions-frontend';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {TranslateModule, TranslateService} from '@ngx-translate/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShowcaseComponent } from './showcase/showcase.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { MonitorComponent } from './manage/monitor/monitor.component';\nimport { PrimeNgModule } from './primeng.modules';\nimport { AuthComponent } from './auth/auth.component';\nimport { authInterceptorProviders } from './auth/auth.interceptor';\nimport { ManageShowcaseComponent } from './manage/manage-showcase/manage-showcase.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    ShowcaseComponent,\n    ManageComponent,\n    MonitorComponent,\n    ManageShowcaseComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule,\n    PrimeNgModule,\n    HttpClientModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    authInterceptorProviders,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(\n    public translate: TranslateService\n  ) {\n    translate.addLangs(['en', 'de']);\n    translate.setDefaultLang('de');\n  }\n}\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, '/assets/translations/', '.json');\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  form: any = {};\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n  return = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n    this.route.queryParams\r\n      .subscribe(params => this.return = params['return']);\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const credentials = { username: form.value.username, password: form.value.password };\r\n    this.authService.login(credentials).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.token);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.authService.updateUser();\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.messageService.add({ severity: 'success', summary: 'Successful Login', detail: 'Logged in as ' + this.roles + '.' });\r\n        \r\n        if (this.return && this.return !== '') {\r\n          this.router.navigateByUrl(this.return);\r\n        } else {\r\n          this.router.navigate(['manage','monitors']);\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        \r\n        this.messageService.add({ severity: 'error', summary: 'Error Message', detail: err.error?.message });\r\n        this.errorMessage = err.error?.message;\r\n        form.reset({ username: form.value.username, password: ''}) ;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container h-100\">\r\n    <div class=\"d-flex justify-content-center h-100\">\r\n        <div class=\"user_card\" style=\"margin-top: 100px;\"\r\n        [style.height]=\"form.invalid && form.submitted  ? '500px' : '400px' \">\r\n            <div class=\"d-flex justify-content-center\">\r\n                <div class=\"brand_logo_container\">\r\n                    <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"brand_logo\" alt=\"Logo\">\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-center\">\r\n                <form (ngSubmit)=\"onSubmit(form)\" #form=\"ngForm\">\r\n                    <h2 class=\"d-flex justify-content-center\" style=\"margin-top: 100px; margin-bottom: 25px;\">{{'login' | translate }}</h2>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\"><i class=\"pi pi-id-card\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control\" name=\"username\" [attr.placeholder]=\"'username' | translate\" ngModel\r\n                                required #username=\"ngModel\" />\r\n                        </div>\r\n\r\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"form.submitted && username.invalid\">\r\n                            Username is required!\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\"><i class=\"pi pi-key\"></i></span>\r\n                            </div>\r\n                            <input type=\"password\" class=\"form-control\" name=\"password\" ngModel required minlength=\"6\"\r\n                                #password=\"ngModel\" [attr.placeholder]=\"'password' | translate\"/>\r\n                        </div>\r\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"form.submitted && password.invalid\">\r\n                            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                            <div *ngIf=\"password.errors.minlength\">\r\n                                Password must be at least 6 characters\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-primary btn-block\" type=\"submit\">\r\n                            {{'login' | translate }}\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <!-- <div class=\"form-group\">\r\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"form.submitted && isLoginFailed\">\r\n                    Login failed: {{ errorMessage }}\r\n                </div>\r\n            </div>\r\n            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n                Logged in as {{ roles }}.\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    const user = this.authService.getUser();\r\n\r\n    if (user) {\r\n      if(route.data.roles && user.roles.some(r=> route.data.roles.includes(r))){\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/test']);\r\n        return false;\r\n      }\r\n     \r\n    } else {\r\n      this.router.navigate(['manage/auth/signin'], {\r\n        queryParams: {\r\n          return: state.url\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\n\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      // for Spring Boot back-end\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from './user.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\nconst AUTH_API = environment.apiUrl + 'auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n  userChanges = new Subject<User>();\r\n\r\n  constructor(private http: HttpClient, private router: Router, private tokenStorage: TokenStorageService) { }\r\n\r\n  login(credentials): Observable<any> {\r\n    console.log(AUTH_API+ 'signin');\r\n    \r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username: credentials.username,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  isAthenticated() {\r\n    return !!this.tokenStorage.getToken();\r\n  }\r\n\r\n  logout() {\r\n    this.tokenStorage.signOut();\r\n  }\r\n\r\n  getUser() {\r\n    return this.tokenStorage.getUser();\r\n  }\r\n\r\n  getRoles(): string[] {\r\n    return this.tokenStorage.getUser().roles;\r\n  }\r\n\r\n  updateUser() {\r\n    this.userChanges.next(this.getUser());\r\n  }\r\n\r\n  hasRole(role: string): boolean {\r\n    return this.getRoles().includes(role);\r\n  }\r\n}\r\n","export enum Role {\r\n    ROLE_TEACHER = 'ROLE_TEACHER',\r\n    ROLE_STUDENT = 'ROLE_STUDENT',\r\n    ROLE_ADMIN = 'ROLE_ADMIN'\r\n  }","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser() {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-showcase',\n  templateUrl: './manage-showcase.component.html',\n  styleUrls: ['./manage-showcase.component.css']\n})\nexport class ManageShowcaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>manage-showcase works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})\nexport class ManageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Monitor } from './monitor.model'\nimport { MonitorService } from './monitor.service'\nimport { MenuItem } from 'primeng/api/menuitem';\n\n@Component({\n  selector: 'app-monitor',\n  templateUrl: './monitor.component.html',\n  styleUrls: ['./monitor.component.css']\n})\nexport class MonitorComponent implements OnInit {\n\n  displayDialog: boolean;\n\n    monitor: Monitor = {};\n\n    selectedMonitor: Monitor;\n\n    newMonitor: boolean;\n\n    monitors: Monitor[];\n\n    cols: any[];\n\n    items: MenuItem[];\n\n    constructor(private monitorService: MonitorService) { }\n\n    ngOnInit() {\n        this.monitorService.getAllMonitors().then(monitors => {\n            this.monitors = monitors;\n            console.log(this.monitors);\n        });\n\n        this.cols = [\n            { field: 'ipAddress', header: 'IP Address' },\n            { field: 'name', header: 'Name' },\n            { field: 'showGroup', header: 'Show Group' },\n            { field: 'location', header: 'Location' },\n            { field: 'status', header: 'Status' }\n        ];\n\n\n    }\n\n    showDialogToAdd() {\n        this.newMonitor = true;\n        this.monitor = {};\n        this.displayDialog = true;\n    }\n\n    save() {\n        let monitors = [...this.monitors];\n        if (this.newMonitor){\n            this.monitorService.saveMonitor(this.monitor)\n            monitors.push(this.monitor);\n        } else\n            monitors[this.monitors.indexOf(this.selectedMonitor)] = this.monitor;\n\n        this.monitors = monitors;\n        this.monitor = null;\n        this.displayDialog = false;\n    }\n\n    delete() {\n        let index = this.monitors.indexOf(this.selectedMonitor);\n        this.monitors = this.monitors.filter((val, i) => i != index);\n        this.monitor = null;\n        this.displayDialog = false;\n    }\n\n    onRowSelect(event) {\n        this.newMonitor = false;\n        this.monitor = this.cloneCar(event.data);\n        this.displayDialog = true;\n    }\n\n    cloneCar(c: Monitor): Monitor {\n        let car = {};\n        for (let prop in c) {\n            car[prop] = c[prop];\n        }\n        return car;\n    }\n\n    monitorOff(){\n        this.monitorService.monitorScreen(this.monitor, false);\n    }\n\n    monitorOn(){\n        this.monitorService.monitorScreen(this.monitor, true);\n    }\n}\n","<div style=\"text-align: center;\">\n    <h1>Monitores</h1>\n    <p-table [columns]=\"cols\" [value]=\"monitors\" selectionMode=\"single\" [(selection)]=\"selectedMonitor\"\n        (onRowSelect)=\"onRowSelect($event)\" [paginator]=\"true\" [rows]=\"15\">\n        <ng-template pTemplate=\"caption\">\n            List of Monitors\n        </ng-template>\n        <ng-template pTemplate=\"header\" let-columns>\n            <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n            <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                    <ng-template *ngIf=\"col.field === 'status'\">    \n                        <p-toggleButton [(ngModel)]=\"rowData[col.field]\" onLabel=\"An\" offLabel=\"Aus\"></p-toggleButton>\n                    </ng-template>\n                        {{rowData[col.field]}}\n                </td>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"summary\" let-rowData>\n            <div style=\"text-align:left\">\n                <button type=\"button\" pButton icon=\"pi pi-plus\" (click)=\"showDialogToAdd()\" label=\"Add\"></button>\n            </div>\n        </ng-template>\n    </p-table>\n    <p-dialog header=\"Monitor Details\" [(visible)]=\"displayDialog\" [focusOnShow]=\"false\" [responsive]=\"true\"\n        showEffect=\"fade\" [modal]=\"true\" [style]=\"{width: '300px'}\">\n        <div class=\"ui-g ui-fluid\" *ngIf=\"monitor\">\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"ipAddress\">IP Adresse</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <input pInputText id=\"ipAddress\" [(ngModel)]=\"monitor.ipAddress\" autofocus />\n                </div>\n            </div>\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"name\">Name</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <input pInputText id=\"name\" [(ngModel)]=\"monitor.name\" />\n                </div>\n            </div>\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"location\">Location</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <input pInputText id=\"location\" [(ngModel)]=\"monitor.location\" />\n                </div>\n            </div>\n            <div class=\"ui-g-12\">\n                <div class=\"ui-g-4\">\n                    <label for=\"status\">Status</label>\n                </div>\n                <div class=\"ui-g-8\">\n                    <button type=\"button\" pButton (click)=\"monitorOn()\" label=\"On\"></button>\n                    <button type=\"button\" pButton (click)=\"monitorOff()\" label=\"Off\"></button>\n                </div>\n            </div>\n        </div>\n        <p-footer>\n            <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n                <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"delete()\" label=\"Delete\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"save()\" label=\"Save\"></button>\n            </div>\n        </p-footer>\n    </p-dialog>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Monitor } from './monitor.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MonitorService {\r\n\r\n    ressorceUrl = environment.apiUrl + 'monitors';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllMonitors() {\r\n        return this.http.get<any>(this.ressorceUrl).toPromise()\r\n        .then(res => \r\n            <Monitor[]>res._embedded.monitors\r\n        )\r\n        .then(data => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n\r\n    saveMonitor(monitor:Monitor){\r\n        return this.http.post<any>(this.ressorceUrl, monitor).toPromise()\r\n        .then(res => \r\n            <Monitor>res\r\n        )\r\n        .then(data => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    monitorScreen(monitor:Monitor, state: boolean){\r\n        return this.http.post('http://' + monitor.ipAddress + '/screen/changeStatus?status=' + state, '').toPromise();\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\n\r\n@NgModule({\r\n    imports: [\r\n        TableModule,\r\n        DialogModule,\r\n        ToastModule,\r\n        ButtonModule,\r\n        ToggleButtonModule,\r\n    ],\r\n    exports: [\r\n        TableModule,\r\n        DialogModule,\r\n        ToastModule,\r\n        ButtonModule,\r\n        ToggleButtonModule,\r\n    ],\r\n    providers: [MessageService]\r\n})\r\nexport class PrimeNgModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase',\n  templateUrl: './showcase.component.html',\n  styleUrls: ['./showcase.component.css']\n})\nexport class ShowcaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>showcase works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'http://localhost:8080/api/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}